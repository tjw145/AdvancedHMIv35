Option Strict On

Imports AdvancedHMIDrivers

Public Class MotionControlSolution

    'This class contains methods for sending commands to the flexure rig's programmable logic controller.
    '
    'Thomas Waybright, 9/15/2023

    '============== Hard-coded PLC memory address values: ===============

    Private plcACKaddress As String = "017383"                  'Move command acknowledgement bit address

    Private plcNextMoveTargetAddress As String = "4416585"      'Memory addresss of next move command; current command handled internally by PLC /
    Private plcNextMoveAccelAddress As String = "4416587"
    Private plcNextMoveDwellTimeAddress As String = "4416589"   ' /
    Private plcRunAddress As String = "017183"                  '"Run" button
    Private plcStopAddress As String = "017186"                 '"Stop" button

    '====================================================================

    Public Pause As Boolean = False                             'A pause switch. Not sure if this will be used.


    '====================================================================

    Public Sub OutputMotionSolution(modbus As ModbusTCPCom, motionProfiles As List(Of MotionProfile), cycles As Integer)

        'Gets all point-to-point motion profiles generated by the MotionProfile class and loads them into a private, untouchable list while operations are being run.
        'Probably unnecessary but I'm paranoid at this point.
        Dim Steps As List(Of MotionProfile)
        Steps = motionProfiles

        Dim moveCommandACK As String = "0" 'AdvancedHMIs unhinged idea of a boolean. 0 or 1. Who needs booleans when you have strings?
        Dim currentMoveNumber As Integer = 0
        Dim totalNumberOfMoves As Integer = Steps.Count

        For cycleNumber As Integer = 0 To cycles

            While currentMoveNumber < totalNumberOfMoves

                modbus.BeginWrite(plcRunAddress, 1, New String() {"1"}) 'Start Move operations

                While moveCommandACK = "0" 'ACK = 0 means the PLC is requesting a new command

                    moveCommandACK = modbus.Read(plcACKaddress) 'Check to see if the PLC has already acknowledged the command.

                    With modbus

                        'Send motion profile data for current command
                        .Write(plcNextMoveTargetAddress, ToString(Steps(currentMoveNumber).TargetPositionPLC))
                        .Write(plcNextMoveAccelAddress, ToString(Steps(currentMoveNumber).AccelerationPLC))
                        .Write(plcNextMoveDwellTimeAddress, ToString(Steps(currentMoveNumber).DwellTime))

                    End With

                End While

                If moveCommandACK <> moveCommandACK Then

                    'Check if ACK status changed; if so, this means the last command has been fulfilled and
                    'the PLC has moved to the next step.
                    currentMoveNumber += 1

                End If


            End While

            currentMoveNumber = 0   'Resets after last step back to first step, until the full cycle is finished.

        Next

    End Sub

End Class
